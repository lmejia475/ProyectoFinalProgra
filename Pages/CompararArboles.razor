@page "/Comparar"
@using Models


<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 bg-light p-3">
            <h4 class="text-primary">Operaciones</h4>

            <div class="mb-2">
                <label>Ingrese un valor</label>
                <input type="number" class="form-control" @bind="valor" />
            </div>

            <div class="d-grid gap-2 mb-2">
                <button class="btn btn-success" @onclick="Insertar">Insertar a Arbol 1</button>
                <button class="btn btn-success" @onclick="Insertar2">Insertar a Arbol 2</button>
                <button class="btn btn-danger" @onclick="VerSimiliares">Comparar Similitud</button>
                <button class="btn btn-danger" @onclick="VerEquidades">Comparar equidad</button>
                <button class="btn btn-danger" @onclick="VerDistint">Son Distintos?</button>
            </div>

            <p class="text-info">@mensaje</p>

            @if (hijos != null)
            {
                <div class="mt-2">
                    <strong>Hijo Izquierdo:</strong> @hijos.HijoIzquierdo<br />
                    <strong>Hijo Derecho:</strong> @hijos.HijoDerecho
                </div>
            }

            @if (todosLosDescendientes != null)
            {
                <div class="alert alert-info mt-2">
                    <strong>Todos los descendientes:</strong> @todosLosDescendientes.Mostrar()
                </div>
            }

            @if (padre.HasValue)
            {
                <div class="alert alert-warning mt-2">
                    <strong>Padre del nodo:</strong> @padre.Value
                </div>
            }

            @if (hojas != null)
            {
                <div class="alert alert-success mt-2">
                    <strong>Nodos hoja:</strong> @hojas.Mostrar()
                </div>
            }

            @if (interiores != null)
            {
                <div class="alert alert-secondary mt-2">
                    <strong>Nodos interiores:</strong> @interiores.Mostrar()
                </div>
            }

            @if (grado.HasValue)
            {
                <div class="alert alert-warning mt-2">
                    <strong>Grado del nodo:</strong> @grado
                </div>
            }

            @if (nivel.HasValue)
            {
                <div class="alert alert-primary mt-2">
                    <strong>Nivel del nodo:</strong> @nivel
                </div>
            }
        </div>

        <div class="col-md-9 p-4">

            <div class="mt-5">
                <h3 class="mb-3">Visualización del Árbol</h3>
                <ArbolComparar1Component Raiz="@abb.Raiz"
                ValorBuscado="@valorBuscado"
                Hijos="@hijos"
                DescendientesTotales="@todosLosDescendientes"
                ValorPadre="@padre"
                NodosHoja="@hojas"
                NodosInteriores="@interiores"
                NodoConGrado="@valorGrado" />
            </div>

            <ArbolComparar2Component Raiz="@abb.Raiz2"
            ValorBuscado="@valorBuscado2"
            Hijos="@hijos2"
            DescendientesTotales="@todosLosDescendientes2"
            ValorPadre="@padre2"
            NodosHoja="@hojas2"
            NodosInteriores="@interiores2"
            NodoConGrado="@valorGrado2" />
        </div>
    </div>
</div>

@code {
    ArbolBinarioBusquedaManual abb = new();

    int valor;
    int? valorBuscado = null;
    int? valorBuscado2 = null;
    string mensaje = "";

    Descendientes? hijos = null;
    DescendientesABB? todosLosDescendientes = null;
    int? padre = null;
    RecorridoABB? hojas = null;
    RecorridoABB? interiores = null;
    int? grado = null;
    int? nivel = null;
    int? valorGrado = null;


    Descendientes? hijos2 = null;
    DescendientesABB? todosLosDescendientes2 = null;
    int? padre2 = null;
    RecorridoABB? hojas2 = null;
    RecorridoABB? interiores2 = null;
    int? grado2 = null;
    int? nivel2 = null;
    int? valorGrado2 = null;

    void Insertar()
    {
        abb.Insertar(valor);
        mensaje = $"Se insertó el valor {valor}.";
        LimpiarVisuales();
    }

    void Insertar2()
    {
        abb.Insertar2(valor);
        mensaje = $"Se insertó el valor {valor}.";
        LimpiarVisuales();
    }

    void VerSimiliares() { 
        if (abb.verSimilar())
        {
            mensaje = "Los árboles son similares.";
        }
        else
        {
            mensaje = "Los árboles no son similares.";
        }
    }

    void VerEquidades() { 
        if (abb.verEquivalente())
        {
            mensaje = "Los árboles son equitativos.";
        }
        else
        {
            mensaje = "Los árboles no son equitativos.";
        }
    }

    void VerDistint(){
        if (abb.verDistintos())
        {
            mensaje = "Los árboles son distintos.";
        }
        else
        {
            mensaje = "Los árboles no son distintos.";
        }
    }

    void LimpiarVisuales()
    {
        hijos = null;
        todosLosDescendientes = null;
        padre = null;
        hojas = null;
        interiores = null;
        grado = null;
        valorGrado = null;
        nivel = null;
    }

    void LimpiarVisuales2()
    {
        hijos2 = null;
        todosLosDescendientes2 = null;
        padre2 = null;
        hojas2 = null;
        interiores2 = null;
        grado2 = null;
        valorGrado2 = null;
        nivel2 = null;
    }
}